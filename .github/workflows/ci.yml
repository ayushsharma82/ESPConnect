# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Continuous Integration

on:
  workflow_dispatch:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  cpplint:
    name: cpplint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-cpplint
          path: ~/.cache/pip

      - name: Pyhton
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: cpplint
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade cpplint
          cpplint \
            --repository=. \
            --recursive \
            --filter=-whitespace/line_length,-whitespace/braces,-whitespace/comments,-runtime/indentation_namespace,-whitespace/indent,-readability/braces,-whitespace/newline,-readability/todo,-build/c++11 \
            --exclude=src/espconnect_webpage.h \
            src

  arduino:
    name: Arduino
    needs: cpplint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - core: esp32:esp32
            board: esp32:esp32:esp32
            eeprom: true
            softwareserial: false
            index_url: https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install arduino-cli
        run: curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | BINDIR=/usr/local/bin sh

      - name: Update core index
        run: arduino-cli core update-index --additional-urls "${{ matrix.index_url }}"

      - name: Install core
        run: arduino-cli core install --additional-urls "${{ matrix.index_url }}" ${{ matrix.core }}

      - name: Install ArduinoJson
        run: arduino-cli lib install bblanchon/ArduinoJson@7.0.2

      - name: Install AsyncTCP-esphome
        run: ARDUINO_LIBRARY_ENABLE_UNSAFE_INSTALL=true arduino-cli lib install --git-url https://github.com/mathieucarbou/esphome-AsyncTCP#v2.1.1

      - name: Install ESP Async WebServer
        run: ARDUINO_LIBRARY_ENABLE_UNSAFE_INSTALL=true arduino-cli lib install --git-url https://github.com/mathieucarbou/ESPAsyncWebServer#v2.3.0

      - name: Build BlockingCaptivePortal
        run: arduino-cli compile --library . --warnings all -b ${{ matrix.board }} "examples/BlockingCaptivePortal/BlockingCaptivePortal.ino"

      - name: Build NonBlockingCaptivePortal
        run: arduino-cli compile --library . --warnings all -b ${{ matrix.board }} "examples/NonBlockingCaptivePortal/NonBlockingCaptivePortal.ino"

      - name: Build AdvancedCaptivePortal
        run: arduino-cli compile --library . --warnings all -b ${{ matrix.board }} "examples/AdvancedCaptivePortal/AdvancedCaptivePortal.ino"

  platformio:
    name: PlatformIO
    needs: cpplint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: espressif32
            board: esp32dev
            eeprom: true
            softwareserial: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.platformio
            ~/.cache/pip
          key: ${{ runner.os }}-platformio

      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install PlatformIO
        run: pip install platformio

      - name: Install platform "${{ matrix.platform }}"
        run: platformio platform install ${{ matrix.platform }}

      - name: Build BlockingCaptivePortal
        run: platformio ci "examples/BlockingCaptivePortal/BlockingCaptivePortal.ino" -l '.' -b ${{ matrix.board }}

      - name: Build NonBlockingCaptivePortal
        run: platformio ci "examples/NonBlockingCaptivePortal/NonBlockingCaptivePortal.ino" -l '.' -b ${{ matrix.board }}

      - name: Build AdvancedCaptivePortal
        run: platformio ci "examples/AdvancedCaptivePortal/AdvancedCaptivePortal.ino" -l '.' -b ${{ matrix.board }}
